
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clases.frames;

import Clases.Memoria;
import Clases.Proceso;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form frmPrincipal
     */
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modelo1 = new DefaultTableModel();
    DefaultTableModel modelo2 = new DefaultTableModel();
    DefaultTableModel modeloexec = new DefaultTableModel();
    DefaultTableModel modelowait = new DefaultTableModel();
    Proceso proceso;
    int tam_memoria;
    Memoria memory;
    int tam;
    int memoriadisponible;
    int ram;
    
    public frmPrincipal() {
        initComponents();
        modelo = (DefaultTableModel) tbdatos.getModel();
        modelo1 = (DefaultTableModel) tbmemoria.getModel();
        modelo2 = (DefaultTableModel) tbprocmem.getModel();
        modeloexec = (DefaultTableModel) tbproexec.getModel();
        modelowait = (DefaultTableModel) tbprowait.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbmemoria = new javax.swing.JTable();
        btnEjecutarProcesoWait = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbprowait = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbproexec = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtmemoria = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtnproc = new javax.swing.JTextField();
        btnIngresarProc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbdatos = new javax.swing.JTable();
        btnExecProc = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbltam = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbmendisp = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbprocmem = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnTerminarProceso = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        tbmemoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tbmemoria.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbmemoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nª"
            }
        ));
        tbmemoria.setGridColor(new java.awt.Color(0, 0, 0));
        tbmemoria.setSelectionBackground(new java.awt.Color(51, 153, 255));
        jScrollPane2.setViewportView(tbmemoria);

        btnEjecutarProcesoWait.setText("Ejecutar Proceso en espera");
        btnEjecutarProcesoWait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarProcesoWaitActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Procesos en espera");

        tbprowait.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tbprowait.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso", "Tamaño (M)", "Tiempo ( s )", "Estado"
            }
        ));
        tbprowait.setSelectionBackground(new java.awt.Color(204, 0, 0));
        jScrollPane3.setViewportView(tbprowait);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Procesos en ejecuccion");

        tbproexec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tbproexec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso", "Tamaño (M)", "Tiempo  (s)", "Estado"
            }
        ));
        jScrollPane4.setViewportView(tbproexec);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tamaño de  la memoria:");

        txtmemoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmemoriaKeyTyped(evt);
            }
        });

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Numero de procesos :");

        txtnproc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnprocKeyTyped(evt);
            }
        });

        btnIngresarProc.setText("Ingresar");
        btnIngresarProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarProcActionPerformed(evt);
            }
        });

        tbdatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tbdatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso", "Tamaño (M)", "Tiempo   (s)"
            }
        ));
        jScrollPane1.setViewportView(tbdatos);

        btnExecProc.setText("Ejecutar Proceso");
        btnExecProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecProcActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Paginación de memoria");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Total de memoria actual:");

        lbltam.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbltam.setText("M");
        lbltam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204), 2));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Total de memoria disponible:");

        lbmendisp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbmendisp.setText("M");
        lbmendisp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2));

        tbprocmem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tbprocmem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbprocmem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEMORIA"
            }
        ));
        tbprocmem.setGridColor(new java.awt.Color(0, 0, 0));
        tbprocmem.setSelectionBackground(new java.awt.Color(51, 153, 255));
        jScrollPane5.setViewportView(tbprocmem);

        btnTerminarProceso.setText("Terminar Proceso");
        btnTerminarProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarProcesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(147, 147, 147)
                                                .addComponent(txtmemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtnproc, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5)
                                                .addGap(26, 26, 26))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnIngresarProc, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(174, 174, 174)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(btnExecProc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(btnTerminarProceso, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 359, Short.MAX_VALUE)))
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEjecutarProcesoWait, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbltam, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbmendisp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(451, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIngresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnproc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIngresarProc)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(169, 169, 169)
                                        .addComponent(btnExecProc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(114, 114, 114))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(btnTerminarProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbltam))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbmendisp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(btnEjecutarProcesoWait, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(jLabel1)
                    .addGap(267, 267, 267)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(232, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarProcActionPerformed
        proceso = new Proceso();
        ram = Integer.parseInt(txtnproc.getText());
        modelo.setRowCount(0);
        if (tam_memoria > 0 && ram > 0) {
            proceso.setTam_memoria(tam_memoria);
            proceso.GenerarProceso(modelo, ram);
        } else {
            JOptionPane.showMessageDialog(null, "El valor debe ser mayor que cero");
        }
        

    }//GEN-LAST:event_btnIngresarProcActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        tam_memoria = Integer.parseInt(txtmemoria.getText());
        if (tam_memoria > 0) {
            modelo1.setRowCount(0);
            modelo2.setRowCount(0);
            modelo.setRowCount(0);
            modeloexec.setRowCount(0);
            modelowait.setRowCount(0);
            lbmendisp.setText("M");
            
            memory = new Memoria(tam_memoria);
            memory.GenerarNumeracion(modelo1);
            modelo1.setRowCount(tam_memoria);
            
            lbltam.setText(tam_memoria + " M");
        } else {
            JOptionPane.showMessageDialog(null, "El valor debe ser mayor que cero");
        }

    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnExecProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecProcActionPerformed
        int fila = tbdatos.getSelectedRow();
        if (fila >= 0) {
            System.out.println(modelo.getValueAt(fila, 0));
            System.out.println(modelo.getValueAt(fila, 1));
            String process = modelo.getValueAt(fila, 0).toString();
            tam = Integer.parseInt(modelo.getValueAt(fila, 1).toString());
            int tiempo = Integer.parseInt(modelo.getValueAt(fila, 2).toString());
            memoriadisponible = memory.getCantidad() - modelo2.getRowCount();
            
            if (modelo2.getRowCount() < memory.getCantidad() && memoriadisponible >= tam) {
                for (int i = 0; i < tam; i++) {
                    modelo2.addRow(new Object[]{
                        process
                    });
                    
                }
                
                modelo.removeRow(fila);
                lbmendisp.setText((memory.getCantidad() - modelo2.getRowCount()) + " M");
                
                modeloexec.addRow(new Object[]{
                    process,
                    tam,
                    tiempo,
                    "EJECUCION"
                });
            } else {
                JOptionPane.showMessageDialog(null, "No hay espacio disponible");
                
            }
            CargarProcesoEspera();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila");
        }
    }//GEN-LAST:event_btnExecProcActionPerformed

    private void btnTerminarProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarProcesoActionPerformed
// terminar proceso
        if (modeloexec.getRowCount() > 0) {
            JOptionPane.showMessageDialog(null, "Se eliminara el proceso con menos tiempo");
            
            int menor = Integer.parseInt(modeloexec.getValueAt(0, 2).toString());
            int pos = 0;
            int tamdisponible = memory.getCantidad() - modelo2.getRowCount();
            
            for (int i = 1; i < modeloexec.getRowCount(); i++) {
                if (Integer.parseInt(modeloexec.getValueAt(i, 2).toString()) < menor) {
                    menor = Integer.parseInt(modeloexec.getValueAt(i, 2).toString());
                    pos = i;
                }
            }
            
            System.out.println("posicion " + pos);
            System.out.println("tiempo menor " + menor);
            int tamanio = Integer.parseInt(modeloexec.getValueAt(pos, 1).toString());
            int size = Integer.parseInt(modeloexec.getValueAt(pos, 1).toString());
            int size1 = Integer.parseInt(modeloexec.getValueAt(pos, 1).toString());
            
            while (tamanio >= 0) {
                TerminarProceso(modeloexec.getValueAt(pos, 0).toString(), size1);
                tamanio--;
            }
            
            modeloexec.removeRow(pos);
            lbmendisp.setText((tamdisponible + size) + " M");
            
        } else {
            JOptionPane.showMessageDialog(null, "No hay procesos en ejecucion ");
        }

    }//GEN-LAST:event_btnTerminarProcesoActionPerformed

    private void btnEjecutarProcesoWaitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarProcesoWaitActionPerformed
//ejecutar proceso en espera
        int fila = tbprowait.getSelectedRow();
        if (fila >= 0) {
            System.out.println(modelowait.getValueAt(fila, 0));
            System.out.println(modelowait.getValueAt(fila, 1));
            String process = modelowait.getValueAt(fila, 0).toString();
            int tam1 = Integer.parseInt(modelowait.getValueAt(fila, 1).toString());
            int tiempo = Integer.parseInt(modelowait.getValueAt(fila, 2).toString());
            
            modelowait.removeRow(fila);
            
            modelo.addRow(new Object[]{
                process,
                tam1,
                tiempo
            });
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila");
        }
        

    }//GEN-LAST:event_btnEjecutarProcesoWaitActionPerformed

    private void txtmemoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmemoriaKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            
            JOptionPane.showMessageDialog(rootPane, "INGRESAR SOLO NUMEROS");
        }
    }//GEN-LAST:event_txtmemoriaKeyTyped

    private void txtnprocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnprocKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            
            JOptionPane.showMessageDialog(rootPane, "INGRESAR SOLO NUMEROS");
        }
    }//GEN-LAST:event_txtnprocKeyTyped
    
    public void CargarProcesoEspera() {
        Object process1 = "";
        Object processtam = "";
        Object processtiempo = "";
        if (memory.getCantidad() == modelo2.getRowCount() || memoriadisponible < tam) {
            for (int i = 0; i < modelo.getRowCount(); i++) {
                for (int j = 0; j < modelo.getColumnCount(); j++) {
                    if (!modelo.getValueAt(i, 0).equals(modelo2.getValueAt(i, 0))) {
                        process1 = modelo.getValueAt(i, 0);
                        processtam = modelo.getValueAt(i, 1);
                        processtiempo = modelo.getValueAt(i, 2);
                        
                    }
                    
                }
                
                modelowait.addRow(new Object[]{
                    process1,
                    processtam,
                    processtiempo,
                    "ESPERA"
                });
                
            }
            // vaciar tabla principal
            modelo.setRowCount(0);
        }
        
    }
    
    public int BuscarProceso(String proc) {
        
        int cont = 0;
        for (int i = 0; i < modelo2.getRowCount(); i++) {
            for (int j = 0; j < modelo2.getColumnCount(); j++) {
                if (modelo2.getValueAt(i, 0).toString().equals(proc)) {
                    
                    cont++;
                }
                
            }
            
        }
        System.out.println(cont);
        
        return cont;
    }
    
    public void TerminarProceso(String proc, int size) {
        int cont = 0;
        
        for (int fila = 0; fila < modelo2.getRowCount(); fila++) {
            for (int columna = 0; columna < modelo2.getColumnCount(); columna++) {
                if (modelo2.getValueAt(fila, columna).equals(proc) && cont < size) {
                    modelo2.removeRow(fila);
                    cont++;
                }
                
            }
        }
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEjecutarProcesoWait;
    private javax.swing.JButton btnExecProc;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnIngresarProc;
    private javax.swing.JButton btnTerminarProceso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbltam;
    private javax.swing.JLabel lbmendisp;
    private javax.swing.JTable tbdatos;
    private javax.swing.JTable tbmemoria;
    private javax.swing.JTable tbprocmem;
    private javax.swing.JTable tbproexec;
    private javax.swing.JTable tbprowait;
    private javax.swing.JTextField txtmemoria;
    private javax.swing.JTextField txtnproc;
    // End of variables declaration//GEN-END:variables
}
